services:
  redis:
    image: redis:7-alpine
    container_name: microservice-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  api-gateway:
    build:
      context: .
      dockerfile: packages/api-gateway/Dockerfile
    container_name: microservice-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SUBSCRIBER_HOST=events-service
      - SUBSCRIBER_PORT=3001
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./packages/api-gateway:/app/packages/api-gateway
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
      - /app/packages/api-gateway/node_modules
      - /app/packages/shared/node_modules
    command: npm run start:dev

  events-service:
    build:
      context: .
      dockerfile: packages/events-service/Dockerfile
    container_name: microservice-events-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATABASE_URL=file:./database.sqlite
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./packages/events-service:/app/packages/events-service
      - ./packages/shared:/app/packages/shared
      - /app/node_modules
      - /app/packages/events-service/node_modules
      - /app/packages/shared/node_modules
      - subscriber_data:/app/packages/events-service/data
    command: npm run start:dev

volumes:
  redis_data:
  subscriber_data: